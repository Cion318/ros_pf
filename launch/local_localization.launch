<launch>
  <!-- Set simulation time to false since we are doing a live localization. -->
  <param name="/use_sim_time" value="false"/>

  <!-- Setup the static transform between robot base and laser. -->
  <node pkg="tf" type="static_transform_publisher" name="base_to_laser" 
        args="0 0 0 0 0 0 base_link laser_link 100"/>

  <!-- Start Rviz with configuration to display all needed information. Only 
       LaserScan has to be added manually. -->
  <node pkg="rviz" type="rviz" name="rviz" 
        args="-d $(find ros_pf)/cfgs/loc_cfg.rviz" />

  <!-- Starting the RPLidar node and setting up parameters. -->
  <node name="rplidarNode" pkg="rplidar_ros" type="rplidarNode" output="screen">
    <!-- Default serial port of the RPLidar when connected. -->
    <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>
    <!-- Baudrate: 115200 for RPLidar A1/A2 and 256000 for RPLidar A3. -->
    <param name="serial_baudrate"     type="int"    value="115200"/>
    <!-- Setting the frame of the lidar to laser_link. -->
    <param name="frame_id"            type="string" value="laser_link"/>
    <param name="inverted"            type="bool"   value="false"/>
    <param name="angle_compensate"    type="bool"   value="true"/>
  </node>

  <!-- Starting the Laserscanmatcher node to provide "fake" odometrie with 
       laserscan data and setting up parameters. -->
  <node pkg="laser_scan_matcher" type="laser_scan_matcher_node" 
        name="laser_scan_matcher_node" output="screen">
    <!-- Setting the fixed frame to being odom instead of world. -->
    <param name="fixed_frame"     value="odom"/>
    <!-- Setting the base frame to be the base_link. -->
    <param name="base_frame"      value="base_link"/>
    <!-- Setting motion prediction parameters to false as long as only lidar
         is being provided. -->
    <param name="use_imu"         value="false"/>
    <param name="use_odom"        value="false"/>    
  </node>

  <!-- Starting the map_server node to load a previously created map. -->
  <arg name="map_file" default="$(find ros_pf)/maps/W1.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server"
        args="$(arg map_file)" />

  <!-- Arguments -->
  <arg name="scan_topic"     default="scan"/>


  <!-- AMCL -->
  <node pkg="amcl" type="amcl" name="amcl">
    <!-- Detailed parameter information at https://wiki.ros.org/amcl -->
    <!-- Overall filter parameters -->
    <param name="min_particles"           value="100"/>
    <param name="max_particles"           value="3000"/>
    <param name="update_min_d"            value="0.2"/>
    <param name="update_min_a"            value="0.5"/>
    <param name="resample_interval"       value="2"/>
    <param name="recovery_alpha_slow"     value="0.0"/> <!-- 0.0 = disabled-->
    <param name="recovery_alpha_fast"     value="0.0"/> <!-- 0.0 = disabled-->
    <param name="initial_pose_x"          value="0"/>
    <param name="initial_pose_y"          value="0.0"/>
    <param name="initial_pose_z"          value="0.0"/>
    <param name="selective_resampling"    value="false"/>

    <!-- Laser model parameters -->
    <param name="laser_min_range"         value="-1.0"/> <!--Laser's min/max-->
    <param name="laser_max_range"         value="-1.0"/> <!--reported range -->
    <param name="laser_max_beams"         value="30"/>
    <param name="laser_z_hit"             value="0.95"/>
    <param name="laser_z_short"           value="0.1"/>
    <param name="laser_z_max"             value="0.05"/>
    <param name="laser_z_rand"            value="0.05"/>
    <param name="laser_model_type"        value="likelihood_field"/>

    <!-- Odometry model parameters -->
    <param name="odom_model_type"           value="diff-corrected"/>
    <param name="odom_alpha1"               value="0.05"/>
    <param name="odom_alpha2"               value="0.05"/>
    <param name="odom_alpha3"               value="0.1"/>
    <param name="odom_alpha4"               value="0.05"/>
    <param name="odom_alpha5"               value="0.2"/>

    <param name="odom_frame_id"             value="odom"/>
    <param name="base_frame_id"             value="base_link"/>
    <param name="global_frame_id"           value="map"/>
  </node>

</launch>